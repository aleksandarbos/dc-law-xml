<?xml version='1.0' encoding='utf-8'?>
<xs:schema
  xmlns="https://code.dccouncil.us/schemas/codify"
  xmlns:p="https://code.dccouncil.us/schemas/dc-library"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="https://code.dccouncil.us/schemas/codify">
  <xs:import namespace="https://code.dccouncil.us/schemas/dc-library" schemaLocation="dc-library.xsd"/>
  <xs:element name="annotation">
    <!-- an ignored comment -->
    <!-- @summary: (codify.xsd) ``<codify:annotation>`` instruction creates an annotation (or note) on the target element.-->
    <!-- @docs: misc/codify_annotation.rst -->
    <xs:complexType>
      <xs:complexContent mixed="true">
        <xs:extension base="p:annotationType">
          <xs:attributeGroup ref="sharedAttributes"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="applicability">
    <!-- @summary: (codify.xsd) The ``<codify:applicability>`` instruction is used to set the applicability status, including funding status, of the target element.  -->
    <!-- @docs: elements/applicability_1.rst -->
    <xs:complexType>
      <xs:attributeGroup ref="p:targetAttributes"/>
      <xs:attributeGroup ref="sharedAttributes"/>
      <xs:attribute name="action" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specifies the applicability action. -->
      </xs:attribute>
      <xs:attribute name="date" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specifies the applicability status, e.g. ``notfunded`` or ``pending``. -->
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="expire">
    <!-- @summary: (codify.xsd) The ``<codify:expire>`` instruction is used to set the expiration date of the target element.  -->
    <xs:complexType>
      <xs:attributeGroup ref="p:targetAttributes"/>
      <xs:attributeGroup ref="sharedAttributes"/>
      <xs:attribute name="date" type="xs:date" use="optional">
        <!-- @summary: (codify.xsd) Specify the date of expiration. -->
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="create-sub-container">
    <!-- @summary: (codify.xsd) The ``<codify:create-sub-container>`` instruction is used in connection with the ``<codify:insert>`` instruction to create a sub-container simultaneous to inserting a new container. -->
    <xs:complexType>
      <xs:attributeGroup ref="p:targetAttributes"/>
      <xs:attributeGroup ref="sharedAttributes"/>
      <xs:attribute name="heading-value" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specifies the text value of the heading, e.g. ``Hospital Assessments``. -->
      </xs:attribute>
      <xs:attribute name="num-value" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specifies the number value of the heading, e.g. ``I``. -->
      </xs:attribute>
      <xs:attribute name="prefix-value" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specifies the prefix text of the heading, e.g. ``Subchapter``. -->
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="emergency">
    <!-- @summary: (codify.xsd) The ``<codify:emergency>`` instruction is used to codify emergency laws.-->
    <xs:complexType>
      <xs:attributeGroup ref="p:targetAttributes"/>
      <xs:attributeGroup ref="sharedAttributes"/>
      <xs:attribute name="action" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specifies the action text to be included in the generated annotation. -->
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="find-replace" type="findReplaceType">
    <!-- @summary: (codify.xsd) The ``<codify:find-replace>`` instruction is used to find and replace text at the target element. -->
  </xs:element>
  <xs:element name="funded-anno">
    <!-- @summary: (codify.xsd) The ``<codify:funded-anno>`` instruction is used to generate an annotation for the target element indicating that the target element has been funded.-->
    <xs:complexType>
      <xs:attributeGroup ref="p:targetAttributes"/>
      <xs:attributeGroup ref="sharedAttributes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ignore">
    <!-- @summary: (codify.xsd) The ``<codify:ignore>`` instruction is used to expressly indicate that a particular portion of the law will not be codified. -->
    <xs:complexType>
      <xs:attributeGroup ref="p:targetAttributes"/>
      <xs:attributeGroup ref="sharedAttributes"/>
      <xs:attribute name="technical" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specifies a technical change to the transform that is different from the instruction provided by the law.-->
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="insert">
    <!-- @summary: (codify.xsd) The ``<codify:insert>`` instruction is used to insert an element (and its children) as a child of the specified target. It can, for instance, insert a new container into the code, insert a new section into an existing law, or insert a new paragraph into an existing section.-->
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="insertType">
          <xs:attributeGroup ref="p:targetAttributes"/>
          <xs:attributeGroup ref="sharedAttributes"/>
          <xs:attribute name="after" type="xs:string" use="optional">
            <!-- @summary: (codify.xsd) Specify the child element at the target path that the transform results should appear after. -->
          </xs:attribute>
          <xs:attribute name="before" type="xs:string" use="optional">
            <!-- @summary: (codify.xsd) Specify the child element at the target path that the transform results should appear before. -->
          </xs:attribute>
          <xs:attribute name="num-value" type="xs:string" use="optional">
            <!-- @summary: (codify.xsd) Specify the number value of the transform result. Defaults to value of ``<num>``.-->
          </xs:attribute>
          <xs:attribute name="technical" type="xs:string" use="optional">
            <!-- @summary: (codify.xsd) Specifies a technical change to the transform that is different from the instruction provided by the law.-->
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="insert-code-container" type="anyType"/>
  <xs:element name="not-funded-anno">
    <!-- @summary: (codify.xsd) The ``<codify:not-funded-anno>`` instruction is used to generate an annotation for the target element indicating that the target element is not funded.-->
    <xs:complexType>
      <xs:attributeGroup ref="p:targetAttributes"/>
      <xs:attributeGroup ref="sharedAttributes"/>
      <xs:attribute name="action" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specifies the action text to be included in the generated annotation, e.g. ``the addition of``, ``creation of``, ``addition of section``, etc. -->
      </xs:attribute>
      <xs:attribute name="applicability-path" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specifies the path to section with applicability provision.-->
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="organic">
    <!-- @summary: (codify.xsd) The ``<codify:organic>`` instruction is used to codify an organic law.-->
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="insertType">
          <xs:attributeGroup ref="p:targetAttributes"/>
          <xs:attributeGroup ref="sharedAttributes"/>
          <xs:attribute name="after" type="xs:string" use="optional">
            <!-- @summary: (codify.xsd) Specify the child element at the target path that the transform results should appear after. -->
          </xs:attribute>
          <xs:attribute name="before" type="xs:string" use="optional">
            <!-- @summary: (codify.xsd) Specify the child element at the target path that the transform results should appear before. -->
          </xs:attribute>
          <xs:attribute name="heading-value" type="xs:string" use="optional">
            <!-- @summary: (codify.xsd) Specifies the text value of the heading, e.g. ``Hospital Assessments``. -->
          </xs:attribute>
          <xs:attribute name="num-value" type="xs:string" use="optional">
            <!-- @summary: (codify.xsd) Specify the number value of the transform result. Defaults to value of ``<num>``.-->
          </xs:attribute>
          <xs:attribute name="prefix-value" type="xs:string" use="optional">
            <!-- @summary: (codify.xsd) Specifies the prefix text of the heading, e.g. ``Subchapter``. -->
          </xs:attribute>
          <xs:attribute name="tag" type="xs:string" use="optional">
            <!-- @summary: (codify.xsd) Specifies the type of element to be inserted, e.g. ``<container>``.-->
          </xs:attribute>
          <xs:attribute name="technical" type="xs:string" use="optional">
            <!-- @summary: (codify.xsd) Specifies a technical change to the transform that is different from the instruction provided by the law.-->
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="redesignate" type="anyType"/>
  <xs:element name="redesignate-para">
    <!-- @summary: (codify.xsd) The ``<codify:redesignate-para>`` instruction changes the value of the target paragraph number from one value to another.-->
    <xs:complexType>
      <xs:attributeGroup ref="p:targetAttributes"/>
      <xs:attributeGroup ref="sharedAttributes"/>
      <xs:attribute name="num-value" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specify the number value of the transform result. Defaults to value of ``<num>``.-->
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="recodify-section">
    <!-- @summary: (codify.xsd) The ``<codify:recodify-section>`` instruction recodifies the target in the code into a new section of the code.-->
    <xs:complexType>
      <xs:attributeGroup ref="p:targetAttributes"/>
      <xs:attributeGroup ref="sharedAttributes"/>
      <xs:attribute name="after" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specify the child element at the target path that the transform results should appear after. -->
      </xs:attribute>
      <xs:attribute name="before" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specify the child element at the target path that the transform results should appear before. -->
      </xs:attribute>
      <xs:attribute name="num-value" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specify the number value of the transform result. Defaults to value of ``<num>``.-->
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="remove" type="anyType"/>
  <xs:element name="repeal">
    <!-- @summary: (codify.xsd) The ``<codify:repeal>`` instruction repeals the target element.-->
    <xs:complexType>
      <xs:attributeGroup ref="p:targetAttributes"/>
      <xs:attributeGroup ref="sharedAttributes"/>
      <xs:attribute name="technical" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specifies a technical change to the transform that is different from the instruction provided by the law.-->
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="replace" type="anyType">
    <!-- @summary: (codify.xsd) The ``<codify:replace>`` instruction replaces the target element with the contents of the instructions parent element.-->
  </xs:element>
  <xs:element name="street-designation-anno">
    <!-- @summary: (codify.xsd) The ``<codify:street-designation-anno>`` instruction is used when the council designates new streets.-->
    <xs:complexType>
      <xs:attributeGroup ref="sharedAttributes"/>
      <xs:attribute name="action" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specifies the action text to be included in the generated annotation, e.g. ``the Council designates``.-->
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="temporary">
    <!-- @summary: (codify.xsd) The ``<codify:temporary>`` instruction is used to codify temporary laws.-->
    <xs:complexType>
      <xs:attributeGroup ref="p:targetAttributes"/>
      <xs:attributeGroup ref="sharedAttributes"/>
      <xs:attribute name="action" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) Specifies the action text to be included in the generated annotation, e.g. ``the addition of a new section``, ``amendment to the Expansion and Coordination of Youth Services Act of 2016``, etc.-->
      </xs:attribute>
      <xs:attribute name="emergency" type="xs:string" use="optional">
        <!-- @summary: (codify.xsd) .. todo -->
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="any">
    <xs:complexType>
      <xs:sequence maxOccurs="unbounded">
        <xs:any processContents="lax"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- types -->
  <xs:complexType name="anyType">
    <xs:complexContent>
      <xs:extension base="xs:anyType">
        <xs:attributeGroup ref="sharedAttributes"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="falseOnlyType">
    <xs:restriction base="xs:string">
      <xs:pattern value="false"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="findReplaceType">
    <xs:sequence minOccurs="0">
      <xs:element ref="p:find"/>
      <xs:element ref="p:replace"/>
    </xs:sequence>
    <xs:attributeGroup ref="p:targetAttributes"/>
    <xs:attributeGroup ref="findReplaceAttributes"/>
    <xs:attributeGroup ref="sharedAttributes"/>
    <xs:attribute name="count" type="xs:integer" use="optional">
      <!-- @summary: (codify.xsd) Specifies the number of instances the ``find`` value exists at the target. -->
    </xs:attribute>
    <xs:attribute name="position" use="optional">
      <!-- @summary: (codify.xsd) Specifies position of the ``find`` value in the target element, e.g. ``last``, ``first``, ``heading``, or ``text``. -->
      <xs:simpleType>
        <xs:union memberTypes="xs:positiveInteger firstLastType"/>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="technical" type="xs:string" use="optional">
      <!-- @summary: (codify.xsd) Specifies a technical change to the transform that is different from the instruction provided by the law.-->
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="firstLastType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="first"/>
      <xs:enumeration value="last"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="insertType">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="create-sub-container"/>
        <xs:element ref="insert"/>
        <xs:element ref="recodify-section"/>
        <xs:element ref="p:container"/>
        <xs:element ref="p:section"/>
        <xs:element ref="p:para"/>
        <xs:element ref="p:text"/>
        <xs:element ref="p:subsection"/>
        <xs:element ref="p:toc"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <!-- attributes -->
  <xs:attribute name="applicability" type="xs:string"/>
  <xs:attribute name="doc" type="xs:string"/>
  <xs:attribute name="expire" type="xs:string"/>
  <xs:attribute name="instruction" type="xs:string"/>
  <xs:attribute name="path" type="xs:string"/>
  <xs:attribute name="warning" type="falseOnlyType"/>
  <xs:attribute name="value" type="xs:string"/>
  <!-- attribute groups -->
  <xs:attributeGroup name="allAttributes">
    <xs:attribute ref="applicability" use="optional"/>
    <xs:attribute ref="doc" use="optional"/>
    <xs:attribute ref="expire" use="optional"/>
    <xs:attribute name="history" type="falseOnlyType" use="optional"/>
    <xs:attribute name="history-prefix" type="xs:string" use="optional"/>
    <xs:attribute ref="instruction" use="optional"/>
    <xs:attribute ref="path" use="optional"/>
    <xs:attribute ref="value" use="optional"/>
    <xs:attribute name="warning" type="falseOnlyType" use="optional"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="findReplaceAttributes">
    <xs:attribute name="find" type="xs:string" use="optional">
      <!-- @summary: Specifies the text to be found at the target. -->
    </xs:attribute>
    <xs:attribute name="replace" type="xs:string" use="optional">
      <!-- @summary: Specifies the replacement text. -->
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="sharedAttributes">
    <xs:attribute name="history" type="falseOnlyType" use="optional">
      <!-- @summary: Setting ``history=false`` to prevent creation of a history entry.-->
    </xs:attribute>
    <xs:attribute name="history-prefix" type="xs:string" use="optional">
      <!-- @summary: Prepends the attribute value to the history entry's text. -->
    </xs:attribute>
    <xs:attribute name="warning" type="falseOnlyType" use="optional">
      <!-- @summary: Set ``warning=false`` to prevent warning when applying this transform. -->
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="targetAttributes">
    <xs:attribute ref="doc" use="optional"/>
    <xs:attribute ref="path" use="optional"/>
  </xs:attributeGroup>
</xs:schema>
